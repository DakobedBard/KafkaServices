server:
  port: 8014
spring.cloud.stream.function.definition: process;

spring.cloud.stream.bindings.process-in-0:
  destination: order-validations

spring.cloud.stream.bindings.process-out-0:
  destination: validations

spring.cloud.stream.kafka.streams.bindings.process-out-0:
  producer:
    keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde

spring.cloud.stream.kafka.streams.binder:
  brokers: localhost:9092
  configuration:
    schema.registry.url: http://localhost:8081
    commit.interval.ms: 1000
spring.cloud.stream.kafka.streams.binder.autoAddPartitions: true
spring.cloud.stream.kafka.streams.binder.minPartitionCount: 4
spring.cloud.stream.kafka.streams.binder.configuration.application.server: localhost:8080
spring:
  kafka:
    properties:
      schema.registry.url: http://localhost:8081
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: create
  datasource:
    platform: postgres
    url: jdbc:postgresql://localhost:5433/productdb
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

spring.cloud.stream.kafka.streams.binder.configuration:
  default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.application.name: payments-service